"""init mi

Revision ID: ec4054d86bc6
Revises: 
Create Date: 2021-08-01 18:33:55.876142

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ec4054d86bc6'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('objectresearch')
    op.drop_table('spatial_ref_sys')
    op.drop_table('timelineviews')
    op.drop_table('typesattr')
    op.drop_table('attributes')
    op.drop_table('attrvalue')
    op.drop_table('users')
    op.drop_table('objectresearchtype_attributes')
    op.drop_table('status')
    op.drop_table('objectanalyst')
    op.drop_table('objecttyperesearch')
    op.drop_index('ix_apscheduler_jobs_next_run_time', table_name='apscheduler_jobs')
    op.drop_table('apscheduler_jobs')
    op.drop_table('timelineprice')
    op.drop_table('timeline')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('timeline',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('objectresearch_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('date', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.Column('demand_factor', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('quantity_items', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('quantity_views', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('quantity_new_views', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('avgprice', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('maxprice', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('minprice', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('quantity_close_items', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['objectresearch_id'], ['objectresearch.id'], name='timeline_objectresearch_id_fkey', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='timeline_pkey')
    )
    op.create_table('timelineprice',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('objectanalyst_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('price', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('date', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['objectanalyst_id'], ['objectanalyst.id'], name='timelineprice_objectanalyst_id_fkey', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='timelineprice_pkey')
    )
    op.create_table('apscheduler_jobs',
    sa.Column('id', sa.VARCHAR(length=191), autoincrement=False, nullable=False),
    sa.Column('next_run_time', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('job_state', postgresql.BYTEA(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='apscheduler_jobs_pkey')
    )
    op.create_index('ix_apscheduler_jobs_next_run_time', 'apscheduler_jobs', ['next_run_time'], unique=False)
    op.create_table('objecttyperesearch',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('objecttyperesearch_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=255), server_default=sa.text("'descript'::character varying"), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='objecttyperesearch_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('objectanalyst',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('objectanalyst_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('objectresearch_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('status_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), server_default=sa.text('NULL::character varying'), autoincrement=False, nullable=False),
    sa.Column('url', sa.VARCHAR(length=255), server_default=sa.text('NULL::character varying'), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('location', sa.VARCHAR(length=255), server_default=sa.text('NULL::character varying'), autoincrement=False, nullable=True),
    sa.Column('coords', sa.NullType(), server_default=sa.text('NULL::geography'), autoincrement=False, nullable=True),
    sa.Column('author_rate', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('date_added', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.Column('last_update', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.Column('url_image', sa.VARCHAR(length=255), server_default=sa.text('NULL::character varying'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['objectresearch_id'], ['objectresearch.id'], name='objectanalyst_objectresearch_id_fkey', onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['status_id'], ['status.id'], name='objectanalyst_status_id_fkey', onupdate='SET NULL', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name='objectanalyst_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('status',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('status_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='status_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('objectresearchtype_attributes',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('objecttyperesearch_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('attributes_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['attributes_id'], ['attributes.id'], name='objectresearchtype_attributes_attributes_id_fkey'),
    sa.ForeignKeyConstraint(['objecttyperesearch_id'], ['objecttyperesearch.id'], name='objectresearchtype_attributes_objecttyperesearch_id_fkey', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='objectresearchtype_attributes_pkey')
    )
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('username', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('password_hash', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('created_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key'),
    sa.UniqueConstraint('username', name='users_username_key')
    )
    # op.create_table('attrvalue',
    # sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    # sa.Column('objectanalyst_id', sa.INTEGER(), autoincrement=False, nullable=False),
    # sa.Column('attributes_id', sa.INTEGER(), autoincrement=False, nullable=False),
    # sa.Column('intvalue', sa.INTEGER(), autoincrement=False, nullable=True),
    # sa.Column('decimalvalue', sa.NUMERIC(), autoincrement=False, nullable=True),
    # sa.Column('boolvalue', sa.BOOLEAN(), autoincrement=False, nullable=True),
    # sa.Column('stringvalue', sa.TEXT(), autoincrement=False, nullable=True),
    # sa.Column('datetimevalue', sa.DATE(), autoincrement=False, nullable=True),
    # sa.Column('datestampvalue', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    # sa.Column('geomvalue', sa.NullType(), server_default=sa.text('NULL::geography'), autoincrement=False, nullable=True),
    # sa.ForeignKeyConstraint(['attributes_id'], ['attributes.id'], name='attrvalue_attributes_id_fkey', onupdate='CASCADE', ondelete='CASCADE'),
    # sa.ForeignKeyConstraint(['objectanalyst_id'], ['objectanalyst.id'], name='attrvalue_objectanalyst_id_fkey', onupdate='CASCADE', ondelete='CASCADE'),
    # sa.PrimaryKeyConstraint('id', name='attrvalue_pkey')
    # )
    # op.create_table('attributes',
    # sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    # sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    # sa.Column('data_type', sa.INTEGER(), autoincrement=False, nullable=False),
    # sa.ForeignKeyConstraint(['data_type'], ['typesattr.id'], name='attributes_data_type_fkey'),
    # sa.PrimaryKeyConstraint('id', name='attributes_pkey')
    # )
    # op.create_table('typesattr',
    # sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    # sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    # sa.PrimaryKeyConstraint('id', name='typesattr_pkey')
    # )
    # op.create_table('timelineviews',
    # sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    # sa.Column('objectanalyst_id', sa.INTEGER(), autoincrement=False, nullable=False),
    # sa.Column('views', sa.INTEGER(), autoincrement=False, nullable=True),
    # sa.Column('date', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    # sa.ForeignKeyConstraint(['objectanalyst_id'], ['objectanalyst.id'], name='timelineviews_objectanalyst_id_fkey', onupdate='CASCADE', ondelete='CASCADE'),
    # sa.PrimaryKeyConstraint('id', name='timelineviews_pkey')
    # )
    # op.create_table('spatial_ref_sys',
    # sa.Column('srid', sa.INTEGER(), autoincrement=False, nullable=False),
    # sa.Column('auth_name', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    # sa.Column('auth_srid', sa.INTEGER(), autoincrement=False, nullable=True),
    # sa.Column('srtext', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    # sa.Column('proj4text', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    # sa.CheckConstraint('(srid > 0) AND (srid <= 998999)', name='spatial_ref_sys_srid_check'),
    # sa.PrimaryKeyConstraint('srid', name='spatial_ref_sys_pkey')
    # )
    # op.create_table('objectresearch',
    # sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    # sa.Column('objecttyperesearch_id', sa.INTEGER(), autoincrement=False, nullable=False),
    # sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    # sa.Column('description', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('url', sa.TEXT(), autoincrement=False, nullable=False),
    # sa.Column('last_update', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    # sa.ForeignKeyConstraint(['objecttyperesearch_id'], ['objecttyperesearch.id'], name='objectresearch_objecttyperesearch_id_fkey', onupdate='CASCADE', ondelete='CASCADE'),
    # sa.PrimaryKeyConstraint('id', name='objectresearch_pkey')
    # )
    # ### end Alembic commands ###
